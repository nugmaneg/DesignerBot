import {
    Wizard,
    WizardStep,
    SceneEnter,
    SceneLeave,
    Command,
    Ctx,
} from 'nestjs-telegraf';
import { WizardContext } from 'telegraf/typings/scenes';
import {User, UserRole} from "@prisma/client";
import {
    adminStartWizardReplyKeyboard,
    moderatorStartWizardReplyKeyboard,
    userStartWizardReplyKeyboard
} from "./start.keyboard";

type StartSession = { step?: number; name?: string; age?: number };
type StartCtx = WizardContext & { session: StartSession };

@Wizard('startWizard')
export class StartWizard {

    @SceneEnter()
    async enter(@Ctx() ctx: StartCtx) {
        const dbUser: User = ctx.state.dbUser;

        let keyboard : any;
        let welcomeText : string;

        switch (dbUser.role) {
            case UserRole.ADMIN:
            case UserRole.FATHER :
                keyboard = adminStartWizardReplyKeyboard;
                welcomeText = 'üëë –ê–¥–º–∏–Ω-–º–µ–Ω—é!\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ ‚¨áÔ∏è';
                break;
            case UserRole.MODERATOR:
                keyboard = moderatorStartWizardReplyKeyboard;
                welcomeText = 'üõ°Ô∏è –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä—Å–∫–æ–µ –º–µ–Ω—é!\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ ‚¨áÔ∏è';
                break;
            case UserRole.USER:
            default:
                keyboard = userStartWizardReplyKeyboard;
                welcomeText = (
                    'üé® –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é!\n' +
                    '–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å —Ç–≤–æ—Ä–∏—Ç—å –∏ —Å–æ–∑–¥–∞–≤–∞—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –¥–∏–∑–∞–π–Ω—ã.' +
                    '\n\n<blockquote>–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ —Å –ø–æ–º–æ—â—å—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∏–∂–µ ‚¨áÔ∏è</blockquote>'
                );
                break;
        }

        await ctx.reply(welcomeText, {reply_markup: keyboard.reply_markup, parse_mode: "HTML"});
        await ctx.scene.leave();
    }

    @SceneLeave()
    async leave(@Ctx() ctx: StartCtx) {
        ctx.session = {};
    }
}